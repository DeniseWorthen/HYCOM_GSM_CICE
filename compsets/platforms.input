# DEFAULTS VALUES OVERRIDDEN BY PLATFORMS

platform.defaults={
    BUILD_WALLTIME=3600 # Wallclock limit in seconds for build jobs
    DEFAULT_TEST_WALLTIME=2400 # Default wallclock limit in seconds for test jobs

    SRCnems="@[HOMEnems]/NEMS/src"
    PARMnems="@[HOMEnems]/parm"

    # Location of GSM exglobal_fcst and *_config scripts
    SCRIPTnems="@[HOMEnems]/compsets"

    SRCrt="@[HOMErt]/src"
    EXECrt="@[HOMErt]/exec"
    INCrt="@[HOMErt]/include"

    # The TMPrt is the scrub area for running regression tests.
    TMPrt="@[RT_SCRATCH_DIR]/tmp"

    # The COMrt is the output area for files to be verified.
    COMrt="@[HOMErt]/com"

    # The BASELINE directory contains the "last known good" baseline
    # to compare to COMrt in verification mode.  In baseline mode,
    # files are installed to the BASELINE directory, and this variable
    # is overridden with some temporary directory.
    BASELINE="@[INPUTS]" # Baseline input or output directory

    # Default locations for various data
    FIX_LANDSFC="@[BASELINE]/data_GFS/fix.am_new_land_sea_mask/"
    FIX_LANDSFC_GAYNO="@[BASELINE]/data_GFS/fix.gayno/"
#    FIXGLOBAL="@[BASELINE]/data_GFS/fix.gayno/"
    FIXGLOBAL="@[BASELINE]/data_GFS/fix.am_new_land_sea_mask/"
    FIX_RAD="@[FIXGLOBAL]"
    DATA_IDEA="@[BASELINE]"
    DATA_POST="@[BASELINE]/data_POST"
    FIX_NGAC="@[BASELINE]/data_GOCART/ngac_fix"

    nemsioget='/bin/false'
    sighdr_path='/bin/false'

    t574_ppn=0 # 0 = use default

    # Workaround for gsm+gocart build issue.  It will sporadically
    # fail to build.  A second try is usually enough.
    BUILD_MAX_TRIES=2
}


########################################################################

load 'wcoss.input'

########################################################################

# THEIA SUPPORT

platform theia {
    use platform.defaults
    MACHINE_ID='theia' # Name of this platform.

    MPI='MPICH'

    nemsioget='/scratch4/NCEPDEV/nems/save/Jun.Wang/nems/util/nemsio_get'
#    sighdr_path='/scratch4/NCEPDEV/global/save/Shrinivas.Moorthi/para/exec/global_sighdr'
    sighdr_path='/bin/false'
    PARM_NGAC='/scratch4/NCEPDEV/nems/save/Jun.Wang/NGAC/v2.0.0/parm'

    CPU_ACCOUNT='nems'
    BUILD_QUEUE='&BUILDQ;' # Queue to use for compilation jobs
    SHORT_TEST_QUEUE='&SHORTQ;' # Queue to use for short test jobs
    LONG_TEST_QUEUE='&LONGQ;' # Queue to use for long test jobs

    cores_per_node=24 # Number of cores per node on compute nodes
    cpus_per_core=2

    # The *nems locations are in NEMS checkout areas.
    HOMEnems=PWD_UP5

    # The *rt locations are auto-generated areas.
    HOMErt=OUTPUT_PATH

    # INPUTS is the input directory, which should contain fix and parm
    # files, plus any restarts or other inputs.
    #BASELINE="/scratch4/NCEPDEV/nems/noscrub/emc.nemspara/RT/HYCOM_GSM_CICE"
    BASELINE="/scratch4/NCEPDEV/stmp4/Bin.Li/RT/HYCOM_GSM_CICE"
    BASELINE_TEMPLATE="/scratch4/NCEPDEV/stmp4/Bin.Li/RT/HYCOM_GSM_CICE"
    INPUTS="@[BASELINE]"

    # PLATFORM DETECTION -----------------------------------------------
    embed bash detect [[[
        # This function is used at PARSE TIME to detect whether we are
        # on NOAA Theia.  It must be very fast and low resource usage
        # since the parser runs it.
        if [[ -d /scratch3 && -d /scratch4 && -d /contrib ]] ; then
            exit 0
        fi
        exit 1
    ]]]

    # ROCOTO SUPPORT ---------------------------------------------------
    rocoto={
        install_dir="@[HOMErt]"
        log_dir="@[TMPrt]/log"
        scheduler="moabtorque"
        entities=[[[
  <!ENTITY SHORTQ "batch">
  <!ENTITY LONGQ "batch">
  <!ENTITY BUILDQ "service">
]]]
        build_resources=[[[
      <!-- Build job resources minus wallclock -->
      <queue>@[BUILD_QUEUE]</queue>
      <memory></memory> <!-- Unlimited virtual memory -->
      <cores>1</cores>
]]]
        short_test_resources=[[[
    <!-- Short test job -->
    <queue>@[SHORT_TEST_QUEUE]</queue>
    <memory></memory> <!-- Unlimited virtual memory -->
]]]
        long_test_resources=[[[
    <!-- Long test job -->
    <queue>@[LONG_TEST_QUEUE]</queue>
    <memory></memory> <!-- Unlimited virtual memory -->
]]]
    }

}

########################################################################

# Autodetection of available platforms.  Calls the "detect" function
# from each of the listed platforms.

autodetect plat (/ wcoss.phase1, theia /) # Unsupported: xjet, wcoss.phase2, wcoss.cray
